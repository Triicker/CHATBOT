const qrcode = require('qrcode-terminal');
const { Client } = require('whatsapp-web.js');
const client = new Client();

const delay = ms => new Promise(res => setTimeout(res, ms));

const pedidos = {};

client.on('qr', qr => {
    qrcode.generate(qr, { small: true });
});

client.on('ready', () => {
    console.log('Tudo certo! WhatsApp da LicorLB conectado');
});

client.on('message', async msg => {
    if (!msg.from.endsWith('@c.us')) return;

    const phone = msg.from;
    const message = msg.body.trim().toLowerCase();

    // --- Respostas Contextuais (Valores e Sabores) ---
    if (/(valor|valores|pre√ßo|custa|quanto custa)/i.test(message)) {
        await client.sendMessage(phone, '*Nossos Pre√ßos:*\n\nüçæ 1 Litro: R$ 40,00\nüç∂ 500 ml: R$ 20,00');
        return; // Adicionado return para evitar que a mensagem continue sendo processada
    }

    if (/(sabor|sabores|tem de que|quais sabores)/i.test(message)) {
        await client.sendMessage(phone, '*Nossos Sabores de Licor Artesanal:*\n\nüíõ Maracuj√°\nüíõüç´ Maracuj√° Trufado\nüçì Morango\nüçìüç´ Morango Trufado\nü•ú Pa√ßoca\nü•úüç´ Pa√ßoca Trufado\nü•õüç´ Ninho com Nutella\nüçÆ Doce de Leite\nüç´ Chocolate\nüçá A√ßa√≠\nüçã Lim√£o\n\nTamanhos dispon√≠veis: 1 Litro e 500 ml.');
        return; // Adicionado return
    }

    // --- L√≥gica Principal de Fluxo (com prioridade) ---
    if (pedidos[phone]) {
        if (!pedidos[phone].nome) {
            pedidos[phone].nome = msg.body.trim();
            await client.sendMessage(phone, 'Agora envie o **endere√ßo para entrega**.');
            await client.sendMessage(phone, 'Agora escolha o local: Esta√ß√µes de metr√¥ R$ 10,00 shopping lapa, shopping Salvador, shopping da Bahia R$ 10,00, Uber flash por conta do cliente.');
            return;
        }

        if (!pedidos[phone].endereco) {
            pedidos[phone].endereco = msg.body.trim();
            await client.sendMessage(phone, '√ìtimo! Agora envie o **sabor**, **tamanho (1L ou 500 ml)** e **quantidade**.\nExemplo: Maracuj√° 1L 2\nSe quiser mais de um, separe por "e". Ex: Maracuj√° 1L 2 e Chocolate 500ml 1');
            return;
        }

        // Se o pedido est√° em andamento (nome e endere√ßo j√° definidos)
        if (pedidos[phone].nome && pedidos[phone].endereco) {
            if (/concluir/i.test(message) && pedidos[phone].items.length > 0) {
                let total = 0;
                let pedidoDescricao = '';
                pedidos[phone].items.forEach(item => {
                    total += item.price * item.qty;
                    pedidoDescricao += `${item.qty}x ${item.flavor} (${item.size}) - R$ ${item.price.toFixed(2).replace('.', ',')}\n`;
                });

                const confirmation =
                    `‚úÖ *Seu pedido foi realizado!* üë§ *Nome:* ${pedidos[phone].nome}
üè° *Endere√ßo:* ${pedidos[phone].endereco}
                
ü•• *Itens:*\n${pedidoDescricao}
                
üíµ *Valor total:* R$ ${total.toFixed(2).replace('.', ',')}
                
üîπ *Chave Pix para pagamento: (87) 99631-3923* Basta transferir o valor para essa chave Pix e depois nos envie o **comprovante** pra darmos continuidade ao pedido.
                
Muito obrigado pelo seu pedido! Em breve entraremos em contato para a entrega.`;

                await client.sendMessage(phone, confirmation);
                delete pedidos[phone];
                return;
            }

            // --- NOVA L√ìGICA PARA M√öLTIPLOS ITENS (mais flex√≠vel com v√≠rgulas ou sem) ---
            // Express√£o regular para encontrar padr√µes de item (sabor, tamanho, quantidade)
            // Agora aceita espa√ßos ou v√≠rgulas como separadores e diferentes formas de escrever tamanho
            const itemPattern = /([a-z√°√©√≠√≥√∫√ß\s]+?)\s*(?:,|\s+)\s*(\d+\s*l|\d+\s*ml)\s*(?:,|\s+)\s*(\d+)/gi;
            let match;
            let itemsAdded = false;

            while ((match = itemPattern.exec(message)) !== null) {
                const flavor = match[1].trim();
                const size = match[2].trim();
                const qty = parseInt(match[3]);

                if (isNaN(qty) || qty <= 0) {
                    await client.sendMessage(phone, `N√£o consegui adicionar "${flavor}". A quantidade deve ser um n√∫mero maior que zero.`);
                    continue;
                }

                let price = 0;
                if (size.toLowerCase().includes('1l')) {
                    price = 40;
                } else if (size.toLowerCase().includes('500ml')) {
                    price = 20;
                } else {
                    await client.sendMessage(phone, `Tamanho inv√°lido para "${flavor}". Por favor, use "1L" ou "500 ml".`);
                    continue;
                }

                if (!pedidos[phone].items) {
                    pedidos[phone].items = []; // Inicializa o array se ainda n√£o existir
                }
                pedidos[phone].items.push({ flavor, size, qty, price });
                itemsAdded = true;
            }

            if (itemsAdded) {
                await client.sendMessage(phone, 'Certo! Os itens foram adicionados ao seu pedido. Deseja acrescentar mais algum? (responda "sim" ou "concluir")');
                return;
            }

            if (/sim/i.test(message)) {
                await client.sendMessage(phone, 'Por favor, envie o pr√≥ximo item no formato: **sabor, tamanho (1L ou 500 ml), quantidade**.\nExemplo: Maracuj√° 1L 2\nSe quiser mais de um, separe por "e". Ex: Maracuj√° 1L 2 e Chocolate 500ml 1');
                return;
            } else {
                // Se a mensagem n√£o √© para concluir, nem um item, nem 'sim', e n√£o √© uma pergunta sobre valor/sabor
                // Esta condi√ß√£o agora se torna o ponto de tratamento para mensagens n√£o reconhecidas dentro do fluxo de pedido
                if (!/(valor|valores|pre√ßo|custa|quanto custa)/i.test(message) && !/(sabor|sabores|tem de que|quais sabores)/i.test(message)) {
                    await client.sendMessage(phone, 'N√£o entendi sua resposta. Se quiser adicionar mais itens, use o formato "Sabor Tamanho Quantidade". Se j√° terminou, digite "concluir".');
                }
                return;
            }
        }
    }

    // L√≥gica para iniciar um novo pedido (se n√£o houver um em andamento)
    if ((/pedido|sim|quero pedido/i.test(message)) && !pedidos[phone]) {
        pedidos[phone] = { items: [], nome: '', endereco: '' };
        await client.sendMessage(phone, '√ìtimo! Por favor envie o nome do(a) comprador(a).');
        return;
    }

    // L√≥gica para informa√ß√µes de PIX
    if (/pix|chave pix|como pago|onde pago|n√∫mero do pix|qual √© o pix|pra qual pix transferir/.test(message)) {
        await client.sendMessage(msg.from,
            `üîπ Nossa chave Pix √© o telefone:\n\n‚û° *(87) 99631-3923)*\n\nBasta transferir o valor do pedido pra essa chave e depois nos envie o comprovante pra darmos continuidade!`
        );
        return;
    }

    // L√≥gica para menus e op√ß√µes gerais (deve ser a √∫ltima a ser verificada)
    if (/menu|oi|ol√°|ola|dia|tarde|noite/.test(message)) {
        await client.sendMessage(phone, 'Ol√°! Sou o assistente da LicorLB. Como posso ajudar voc√™ hoje? Por favor, digite uma das alternativas:\n\n1 - Card√°pio de Sabores\n2 - Pre√ßos\n3 - Perguntas Frequentes\n4 - Como fazer o pedido\n5 - Outros assuntos');
        return;
    }
    if (message === '1') {
        await client.sendMessage(phone, '*Nossos Sabores de Licor Artesanal:*\n\nüíõ Maracuj√°\nüíõüç´ Maracuj√° Trufado\nüçì Morango\nüçìüç´ Morango Trufado\nü•ú Pa√ßoca\nü•úüç´ Pa√ßoca Trufado\nü•õüç´ Ninho com Nutella\nüçÆ Doce de Leite\nüç´ Chocolate\nüçá A√ßa√≠\nüçã Lim√£o\n\nTamanhos dispon√≠veis: 1 Litro e 500 ml.');
        await delay(1000);
        await client.sendMessage(phone, 'Deseja fazer um pedido ou quer saber mais sobre a LicorLB? (responda "pedido" ou "menu")');
        return;
    }
    if (message === '2') {
        await client.sendMessage(phone, '*Nossos Pre√ßos:*\n\nüçæ 1 Litro: R$ 40,00\nüç∂ 500 ml: R$ 20,00');
        await delay(1000);
        await client.sendMessage(phone, 'Deseja fazer um pedido ou quer saber mais sobre a LicorLB? (responda "pedido" ou "menu")');
        return;
    }
    if (message === '3') {
        await client.sendMessage(phone, '*Perguntas Frequentes (FAQ)*\n\n1Ô∏è‚É£ A LicorLB vende em atacado?\n- Sim, para quantidades especiais, entre em contato!\n\n2Ô∏è‚É£ A LicorLB faz entrega?\n- Sim! Realizamos entregas. Verificar taxa na sua regi√£o.\n\n3Ô∏è‚É£ Pix para pagamento:\n- Chave Pix: *(87) 99631-3923*\n\n4Ô∏è‚É£ Cat√°logo:\n- Os sabores, tamanho e valores est√£o listados neste chat.\n\n5Ô∏è‚É£ Quais s√£o os valores?\n- 1 Litro: R$40,00\n- 500 ml: R$20,00\n\n6Ô∏è‚É£ Sabores dispon√≠veis:\n- Maracuj√°, Morango, Pa√ßoca, Ninho com Nutella, Doce de Leite, Chocolate, A√ßa√≠ e Lim√£o.\n\n7Ô∏è‚É£ S√≥ fazemos entregas nas esta√ß√µes de metr√¥ R$ 10,00 shopping lapa, shopping Salvador, shopping da Bahia R$ 10,00, Uber flash por conta do cliente. .\n\n8Ô∏è‚É£ Outros assuntos?\n- Se tiver mais alguma d√∫vida, √© s√≥ perguntar!');
        await delay(1000);
        await client.sendMessage(phone, 'Deseja fazer um pedido ou quer saber mais sobre a LicorLB? (responda "pedido" ou "menu")');
        return;
    }
    if (message === '4') {
        await client.sendMessage(phone, '*Como fazer o pedido*\n\nBasta dizer pra gente o(s) sabor(es) e o tamanho que quer.\nEm seguida, envie o seu nome, telefone e endere√ßo pra entrega.\nLogo depois compartilhamos o Pix pra voc√™ finalizar o pedido.');
        await delay(1000);
        await client.sendMessage(phone, 'Deseja fazer um pedido neste momento? (responda "sim" ou "n√£o")');
        return;
    }
    if (message === '5') {
        await client.sendMessage(phone, 'Se voc√™ quer fazer um pedido especial, parceria ou outras d√∫vidas, √© s√≥ dizer pra gente!');
        await delay(1000);
        await client.sendMessage(phone, 'Deseja fazer um pedido neste momento? (responda "sim" ou "n√£o")');
        return;
    }

    // L√≥gica para "n√£o" ou voltar ao menu
    if (/n√£o|voltar|cancelar/i.test(message)) {
        if (pedidos[phone]) {
            delete pedidos[phone];
            await client.sendMessage(phone, 'Ok, o pedido atual foi cancelado. Se desejar fazer um novo pedido, digite "pedido" ou "menu" para ver as op√ß√µes.');
            return;
        }
        await client.sendMessage(phone, 'Tudo bem! Se desejar, √© s√≥ dizer "menu" pra come√ßarmos novamente.');
        return;
    }

    // Mensagem padr√£o para comandos n√£o reconhecidos - √∫ltima a ser verificada
    await client.sendMessage(phone, 'Desculpe, n√£o entendi sua mensagem. Por favor, digite "menu" para ver as op√ß√µes dispon√≠veis ou "pedido" para iniciar um novo pedido.');
});

client.initialize();